FrontBackSplit	test.c	/^void FrontBackSplit(struct node* source,$/
MergeSort	test.c	/^void MergeSort(struct node** headRef)$/
Mmain	main.c	/^int main(int ac, char **av)$/
Mtest	test.c	/^int main()$/
Mtest1	test1.c	/^int main()$/
Mtest2	test2.c	/^int main(int ac, char **av)$/
Mtest3	test3.c	/^int main(void) {$/
add_path	list_directory.c	/^char	*add_path(char *dname, char *path)$/
b_skip	libft/ft_strtrim.c	/^static int		b_skip(char const *str)$/
cm_to_inches	test3.c	/^double cm_to_inches(double cm) {$/
doPath	test1.c	/^char  *doPath(char *name, char *path)$/
ft_abs	libft/ft_abs.c	/^int	ft_abs(int n)$/
ft_atoi	libft/ft_atoi.c	/^int	ft_atoi(const char *str)$/
ft_bzero	libft/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/
ft_fprintf	libft/ft_printf.c	/^int			ft_fprintf(int fd, char *format, ...)$/
ft_isalnum	libft/ft_isalnum.c	/^int		ft_isalnum(int c)$/
ft_isalpha	libft/ft_isalpha.c	/^int		ft_isalpha(int c)$/
ft_isascii	libft/ft_isascii.c	/^int		ft_isascii(int c)$/
ft_isdigit	libft/ft_isdigit.c	/^int		ft_isdigit(int c)$/
ft_isprint	libft/ft_isprint.c	/^int		ft_isprint(int c)$/
ft_itoa	libft/ft_itoa.c	/^char			*ft_itoa(int n)$/
ft_lstadd	libft/ft_lstadd.c	/^void	ft_lstadd(t_list **alst, t_list *new)$/
ft_lstdel	libft/ft_lstdel.c	/^void	ft_lstdel(t_list **alst, void (*del)(void *, /
ft_lstdelone	libft/ft_lstdelone.c	/^void	ft_lstdelone(t_list **alst, void (*del)(void*/
ft_lstiter	libft/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(t_list *ele/
ft_lstmap	libft/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, t_list *(*f)(t_list/
ft_lstnew	libft/ft_lstnew.c	/^t_list	*ft_lstnew(void const *content, size_t cont/
ft_memalloc	libft/ft_memalloc.c	/^void	*ft_memalloc(size_t size)$/
ft_memccpy	libft/ft_memccpy.c	/^void	*ft_memccpy(void *dst, void *src, int c, size/
ft_memchr	libft/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/
ft_memcmp	libft/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size/
ft_memcpy	libft/ft_memcpy.c	/^void	*ft_memcpy(void *des, const void *src, size_t/
ft_memdel	libft/ft_memdel.c	/^void	ft_memdel(void **ap)$/
ft_memmove	libft/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_/
ft_memset	libft/ft_memset.c	/^void	*ft_memset(void *b, int c, size_t n)$/
ft_nbrlen	libft/ft_nbrlen.c	/^int	ft_nbrlen(int nbr)$/
ft_printf	libft/ft_printf.c	/^int			ft_printf(char *format, ...)$/
ft_putchar	libft/ft_putchar.c	/^void	ft_putchar(char c)$/
ft_putchar_fd	libft/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/
ft_putendl	libft/ft_putendl.c	/^void	ft_putendl(char const *s)$/
ft_putendl_fd	libft/ft_putendl_fd.c	/^void	ft_putendl_fd(char const *s, int fd)$/
ft_putnbr	libft/ft_putnbr.c	/^void	ft_putnbr(int n)$/
ft_putnbr_fd	libft/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/
ft_putstr	libft/ft_putstr.c	/^void	ft_putstr(char const *s)$/
ft_putstr_fd	libft/ft_putstr_fd.c	/^void	ft_putstr_fd(char const *s, int fd)$/
ft_putstr_len	libft/print_string.c	/^void	ft_putstr_len(char *s, int i, t_info *conver_/
ft_putwstr_len	libft/print_wstr_helper.c	/^void		ft_putwstr_len(wchar_t *ws, t_info *conver_i/
ft_strcat	libft/ft_strcat.c	/^char	*ft_strcat(char *restrict s1, const char *res/
ft_strchr	libft/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/
ft_strclr	libft/ft_strclr.c	/^void	ft_strclr(char *s)$/
ft_strcmp	libft/ft_strcmp.c	/^int		ft_strcmp(const char *s1, const char *s2)$/
ft_strcpy	libft/ft_strcpy.c	/^char	*ft_strcpy(char *dst, const char *src)$/
ft_strdel	libft/ft_strdel.c	/^void	ft_strdel(char **as)$/
ft_strdup	libft/ft_strdup.c	/^char	*ft_strdup(const char *s1)$/
ft_strequ	libft/ft_strequ.c	/^int		ft_strequ(char const *s1, char const *s2)$/
ft_striter	libft/ft_striter.c	/^void	ft_striter(char *s, void (*f)(char *))$/
ft_striteri	libft/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, /
ft_strjoin	libft/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/
ft_strlcat	libft/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size/
ft_strlen	libft/ft_strlen.c	/^size_t	ft_strlen(const char *s)$/
ft_strmap	libft/ft_strmap.c	/^char	*ft_strmap(char const *s, char (*f)(char))$/
ft_strmapi	libft/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned/
ft_strmerge	libft/ft_strmerge.c	/^char	*ft_strmerge(char *a, char *b)$/
ft_strncat	libft/ft_strncat.c	/^char		*ft_strncat(char *restrict s1, const char *r/
ft_strncmp	libft/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, siz/
ft_strncpy	libft/ft_strncpy.c	/^char	*ft_strncpy(char *dst, const char *src, size_/
ft_strnequ	libft/ft_strnequ.c	/^int		ft_strnequ(char const *s1, char const *s2, si/
ft_strnew	libft/ft_strnew.c	/^char	*ft_strnew(size_t size)$/
ft_strnstr	libft/ft_strnstr.c	/^char	*ft_strnstr(const char *big, const char *litt/
ft_strrchr	libft/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/
ft_strsplit	libft/ft_strsplit.c	/^char		**ft_strsplit(char const *s, char c)$/
ft_strstr	libft/ft_strstr.c	/^char	*ft_strstr(const char *big, const char *littl/
ft_strsub	libft/ft_strsub.c	/^char	*ft_strsub(char const *s, unsigned int start,/
ft_strtrim	libft/ft_strtrim.c	/^char			*ft_strtrim(char const *s)$/
ft_tolower	libft/ft_tolower.c	/^int	ft_tolower(int c)$/
ft_toupper	libft/ft_toupper.c	/^int		ft_toupper(int c)$/
ft_wstrlen	libft/print_wstr_helper.c	/^int			ft_wstrlen(wchar_t *tmp)$/
get_arg	main.c	/^int	get_arg(t_linfo *info, char *av)$/
get_field_width	libft/printf_get_conversion_info.c	/^char			*get_field_width(t_info *conver_info, char /
get_flag	main.c	/^void  get_flag(char *av, int *flag)$/
get_flag_info	libft/ft_printf.c	/^char		*get_flag_info(t_info *conver_info, char *st/
get_length_modi	libft/printf_get_conversion_info.c	/^char			*get_length_modi(t_info *conver_info, char /
get_less_conversion_specifier	libft/print_number_conversion.c	/^void		get_less_conversion_specifier(char s, t_info/
get_lst	list_directory.c	/^void	get_lst(struct dirent *dir, t_list **all_lst,/
get_path	list_directory.c	/^char	*get_path(char *path, char *name)$/
get_pre	libft/print_invalid_get_info.c	/^int		get_pre(wchar_t *ws, int precision)$/
get_precision	libft/printf_get_conversion_info.c	/^char			*get_precision(t_info *conver_info, char *s/
list_directory	list_directory.c	/^int	list_directory(char *path, int len, t_linfo *i/
lst_print_all_color	list_directory.c	/^void	lst_print_all_color(t_list *lst, char *path, /
merge_sort	sort_lst.c	/^void merge_sort(t_list **headref, t_list *(*f)(t_l/
n_len	libft/ft_itoa.c	/^static	int		n_len(int n)$/
node	ftls.h	/^\/\/ struct node$/
norm1_fpl	libft/print_wstr_helper.c	/^static void	norm1_fpl(char *str, wchar_t *ws, t_in/
norm1_print_exit_precision	libft/print_nbr_helper.c	/^static void	norm1_print_exit_precision(t_info *con/
norm1_print_str	libft/print_nbr_str.c	/^static void	norm1_print_str(t_info *conver_info)$/
norm1_pws_left	libft/print_wide_string.c	/^static void	norm1_pws_left(t_info *conver_info, wc/
norm1_pwsp	libft/print_wide_string.c	/^static void	norm1_pwsp(t_info *conver_info, wchar_/
norm2_fpl	libft/print_wstr_helper.c	/^static void	norm2_fpl(char *str, wchar_t *ws, t_in/
norm2_print_exit_precision	libft/print_nbr_helper.c	/^static void	norm2_print_exit_precision(t_info *con/
norm2_print_str	libft/print_nbr_str.c	/^static void	norm2_print_str(t_info *conver_info)$/
norm2_pws	libft/print_wide_string.c	/^static void	norm2_pws(t_info *conver_info, wchar_t/
norm3_fpl	libft/print_wstr_helper.c	/^static void	norm3_fpl(char *str, wchar_t *ws, t_in/
norm3_print_exit_precision	libft/print_nbr_helper.c	/^static void	norm3_print_exit_precision(t_info *con/
norm3_print_str	libft/print_nbr_str.c	/^static void	norm3_print_str(t_info *conver_info)$/
norm_glm	libft/printf_get_conversion_info.c	/^static	char	*norm_glm(t_info *conver_info, char *s/
norm_gp_star	libft/printf_get_conversion_info.c	/^static	char	*norm_gp_star(t_info *conver_info, cha/
norm_p_pre_left	libft/print_number.c	/^static void			norm_p_pre_left(t_info *conver_info,/
norm_print_sign	libft/ft_printf.c	/^static int	norm_print_sign(t_info *conver_info, in/
num_count	libft/num_count.c	/^int	num_count(int n)$/
number_to_print_signed	libft/print_number.c	/^long long			number_to_print_signed(t_info *conver_/
number_to_print_unsigned	libft/print_number.c	/^unsigned long long	number_to_print_unsigned(t_info/
parse_argument	main.c	/^t_linfo	*parse_argument(int ac, char **av, t_linfo/
parse_flag	main.c	/^char	**parse_flag(char **av, int *flag)$/
pputchar	libft/pputchar.c	/^int	pputchar(char c, int fd)$/
pputstr	libft/pputstr.c	/^int	pputstr(char const *s, int fd)$/
printList	test.c	/^void printList(struct node *node)$/
print_bits	libft/print_bits.c	/^void	print_bits(unsigned char octet)$/
print_char	libft/print_char_conversion.c	/^void	print_char(t_info *conver_info, va_list args,/
print_char_conversion	libft/print_char_conversion.c	/^void	print_char_conversion(t_info *conver_info, ch/
print_convert_result	libft/ft_printf.c	/^char		*print_convert_result(char *str, va_list arg/
print_directory	main.c	/^void	print_directory(t_linfo *info)$/
print_exit_precision	libft/print_nbr_helper.c	/^void		print_exit_precision(t_info *conver_info, ch/
print_exit_precision_left	libft/print_number.c	/^void				print_exit_precision_left(t_info *conver_i/
print_nbr	libft/print_number.c	/^void				print_nbr(t_info *conver_info, char *str, /
print_nbr_helper	libft/printf_helper.c	/^void	print_nbr_helper(t_info *conver_info, int i, /
print_no_precision	libft/print_nbr_str.c	/^void		print_no_precision(t_info *conver_info, char/
print_no_precision_left	libft/print_nbr_helper.c	/^void		print_no_precision_left(t_info *conver_info,/
print_null	libft/print_string.c	/^void	print_null(t_info *conver_info)$/
print_number_conversion	libft/print_number_conversion.c	/^void		print_number_conversion(t_info *conver_info,/
print_reg_str_precision	libft/print_string.c	/^void	print_reg_str_precision(t_info *conver_info, /
print_reg_string	libft/print_string.c	/^void	print_reg_string(t_info *conver_info, char *s/
print_regular_char	libft/print_char_conversion.c	/^void	print_regular_char(t_info *conver_info, char /
print_result	libft/print_number_conversion.c	/^void		print_result(unsigned long long nbr, t_info /
print_result_capx	libft/print_number_conversion.c	/^void		print_result_capx(unsigned long long nbr, \\/
print_result_d	libft/print_number_conversion.c	/^void		print_result_d(long long nbr, t_info *conver/
print_sign	libft/ft_printf.c	/^int			print_sign(t_info *conver_info, int sign)$/
print_space_helper	libft/printf_helper.c	/^void	print_space_helper(t_info *conver_info, int i/
print_str	libft/print_nbr_str.c	/^void		print_str(char *str, t_info *conver_info)$/
print_string	libft/print_string.c	/^void	print_string(t_info *conver_info, va_list arg/
print_unvalid	main.c	/^void	print_unvalid(t_list *invalid)$/
print_unvalid_conversion_specifier	libft/print_invalid_get_info.c	/^void	print_unvalid_conversion_specifier(t_info *co/
print_w_char_helper	libft/printf_helper.c	/^void	print_w_char_helper(t_info *conver_info, wcha/
print_w_str_precision	libft/print_wide_string.c	/^void		print_w_str_precision(t_info *conver_info, /
print_wchar	libft/print_char_conversion.c	/^void	print_wchar(t_info *conver_info, char *str, i/
print_wide_char	libft/print_char_conversion.c	/^void	print_wide_char(t_info *conver_info, wchar_t /
print_wide_string	libft/print_wide_string.c	/^void		print_wide_string(t_info *conver_info, wchar/
push	test.c	/^void push(struct node** head_ref, int new_data)$/
put_str_helper	libft/printf_helper.c	/^void	put_str_helper(t_info *conver_info, int i, ch/
skip_space	libft/skip_space.c	/^int		skip_space(char const *str)$/
skip_whitespace	libft/ft_strtrim.c	/^static int		skip_whitespace(char const *str)$/
sorted_merge_file	sort_lst.c	/^t_list *sorted_merge_file(t_list *a, t_list *b)$/
sorted_merge_r_dir	sort_lst.c	/^t_list *sorted_merge_r_dir(t_list *a, t_list *b)$/
sorted_merge_unvalid	sort_lst.c	/^\/\/ t_list *sorted_merge_unvalid(t_list *a, t_lis/
swap_bits	libft/swap_bits.c	/^unsigned char	swap_bits(unsigned char octet)$/
t_flag	libft/libft.h	/^}					t_flag;$/
t_info	libft/libft.h	/^}					t_info;$/
t_linfo	ftls.h	/^}				t_linfo;$/
t_list	ftls.h	/^\/\/ }					t_list;$/
t_string	libft/libft.h	/^}					t_string;$/
word_count	libft/word_count.c	/^int	word_count(char *str, char c)$/
wordcount	libft/ft_strsplit.c	/^int			wordcount(char *str, char c)$/
write_helper	libft/printf_helper.c	/^void	write_helper(t_info *conver_info, char *str, /
